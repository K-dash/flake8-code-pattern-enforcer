name: Pytest

permissions:
  contents: write
  pull-requests: write

on: [push, pull_request]

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ['3.9', '3.10', '3.11', '3.12']

    steps:
    - uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.python-version }}

    - name: Cache Poetry dependencies
      uses: actions/cache@v3
      with:
        path: ~/.cache/pypoetry
        key: ${{ runner.os }}-poetry-${{ hashFiles('**/poetry.lock') }}
        restore-keys: |
          ${{ runner.os }}-poetry-

    - name: Install Poetry
      run: |
        python -m pip install --upgrade pip
        pip install poetry

    - name: Configure Poetry
      run: |
        poetry config virtualenvs.create true
        poetry config virtualenvs.in-project true

    - name: Cache virtual environment
      uses: actions/cache@v3
      with:
        path: .venv
        key: ${{ runner.os }}-venv-${{ hashFiles('**/poetry.lock') }}

    - name: Install dependencies
      run: |
        poetry config installer.max-workers 10
        poetry install --no-interaction --no-ansi

    - name: Test with pytest
      run: |
        set -o pipefail
        poetry run python -m pytest --junitxml=pytest.xml --cov-report=term-missing --cov=src tests/ | tee pytest-coverage.txt

    - name: Pytest coverage comment
      continue-on-error: true
      uses: MishaKav/pytest-coverage-comment@v1.1.47
      with:
        pytest-coverage-path: ./pytest-coverage.txt
        junitxml-path: ./pytest.xml
