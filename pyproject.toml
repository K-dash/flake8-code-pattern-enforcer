[tool.poetry]
name = "flake8-import-guard"
version = "0.1.0"
description = ""
authors = ["K'  <51281148+K-dash@users.noreply.github.com>"]
license = "MIT"
readme = "README.md"
packages = [{ include = "src" }]
classifiers = [
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
]

[tool.poetry.dependencies]
python = "^3.12"
flake8 = "^7.1.0"
gitpython = "^3.1.43"
python-dotenv = "^1.0.1"
toml = "^0.10.2"

[tool.poetry.group.dev.dependencies]
ruff = "^0.5.5"
pre-commit = "^3.7.1"
pytest = "^8.3.2"
pytest-cov = "^5.0.0"

[build-system]
requires = ["poetry-core", "wheel"]
build-backend = "poetry.core.masonry.api"

# pytest settings
[tool.pytest.ini_options]
testpaths = 'tests'
pythonpath = "."
addopts = '-p no:warnings'  # disable pytest warnings
log_format = '%(name)s %(levelname)s: %(message)s'

# ruff global settings
[tool.ruff]
line-length = 80

# linter
[tool.ruff.lint]
# I: isort
# F: Pyflakes
# E: Pycodestyle Error
# W: Pycodestyle Warning
# P: Pylint
# PT: flake8-pytest-style
preview = true
select = ['I', 'F', 'W', 'PL', 'PT']

[tool.ruff.lint.pycodestyle]
ignore-overlong-task-comments = true
max-doc-length = 120

# formatter
[tool.ruff.format]
preview = true
quote-style = 'double'
docstring-code-format = true

# flake8-import-guard
[tool.poetry.plugins."flake8.extension"]
CPE = "src.main:Flake8ImportGuard"

[tool.flake8-import-guard]
forbidden_imports = ["load_dotenv", "subprocess"]
